<template>
    <div class="visual-dl-chart-page">
        <ui-expand-panel info="{{itemsLength}}" title="{{title}}">
            <div san-for="tag in filteredPageList" class="visual-dl-chart-box">
                <ui-chart
                    san-for="tag in tag.tagList"
                    tagInfo="{{tag}}"
                    runs="{{config.runs}}"
                    chartType="{{config.chartType}}"
                    runsItems="{{runsItems}}"
                ></ui-chart>
            </div>
            <ui-pagination
                san-if="total > pageSize"
                on-pageChange="handlePageChange($event)"
                current="{{currentPage}}"
                pageSize="{{pageSize}}"
                total="{{total}}"
                showSizeChanger="{{false}}"
            />
        </ui-expand-panel>
    </div>
</template>
<script>
import ExpandPanel from '../../common/component/ExpandPanel';
import Chart from './chart';
import Pagination from 'san-mui/Pagination';

import {cloneDeep} from 'lodash';

export default {
    components: {
        'ui-chart': Chart,
        'ui-expand-panel': ExpandPanel,
        'ui-pagination': Pagination
    },
    computed: {
        filteredRunsList() {
            let tagList = this.data.get('tagList') || [];
            let runs = this.data.get('config.runs') || [];
            let list = cloneDeep(tagList);
            return list.slice().map(item => {
                item.tagList = item.tagList.filter(one => runs.includes(one.run));
                return item;
            });
        },

        filteredPageList() {
            let list = this.data.get('filteredRunsList');
            let currentPage = this.data.get('currentPage');
            let pageSize = this.data.get('pageSize');
            return list.slice((currentPage - 1) * pageSize, currentPage * pageSize);
        },
        total() {
            let list = this.data.get('filteredRunsList') || [];
            return list.reduce((num, item) => {
                let length = item.tagList.length;
                return length ? num + 1 : num;
            }, 0);
        },
        itemsLength() {
            let list = this.data.get('filteredRunsList') || [];
            return list.reduce((num, item) => {
                let length = item.tagList.length;
                return length + num;
            }, 0);
        }
    },
    initData() {
        return {
            // current page
            currentPage: 1,
            // item per page
            pageSize: 4
        };
    },

    handlePageChange({pageNum}) {
        this.data.set('currentPage', pageNum);
    }
};
</script>
<style lang="stylus">
@import '../../style/variables';

+prefix-classes('visual-dl-')
    .chart-page
        .chart-box
            float left
        .chart-box:after
            content: "";
            clear: both;
            display: block;
</style>
